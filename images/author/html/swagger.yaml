swagger: "2.0"
info:
  description: "List and add authors via /author endpoint"
  title: "Author Web Service"
basePath: "/"
tags:
- name: "author"
schemes:
- "http"
paths:
  /author:
    get:
      tags:
      - "author"
      summary: "Get authors via optional 'name' query param."
      description: "Returns list of authors. When 'name' is specified only matching\
        \ authors are returned. Requires authentication token in header with key AUTHORIZATION.\
        \ Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "getAuthors"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "query"
        description: "Name or partial name of author to retrieve."
        required: false
        type: "string"
      - name: "offset"
        in: "query"
        description: "Where to start the returned data segment from the full result."
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "size of the returned data segment."
        required: false
        type: "integer"
        format: "int32"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultWrapperAuthorResult"
    post:
      tags:
      - "author"
      summary: "Create author."
      description: "Create new author in the database. The 'id' field will be ignored.\
        \ Requires authentication token in header with key AUTHORIZATION. Example:\
        \ AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "createAuthor"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Author information."
        required: false
        schema:
          $ref: "#/definitions/AuthorQuery"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "Author created."
        409:
          description: "Author already exists."
  /author/{author_id}:
    get:
      tags:
      - "author"
      summary: "Get author by ID."
      description: "Get author information. Requires authentication token in header\
        \ with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "getAuthor"
      produces:
      - "application/json"
      parameters:
      - name: "author_id"
        in: "path"
        description: "ID of author to retrieve."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuthorResult"
    put:
      tags:
      - "author"
      summary: "Update an existing author."
      description: "Update the author in the database. The 'id' field will be ignored.\
        \ Requires authentication token in header with key AUTHORIZATION. Example:\
        \ AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "updateAuthor"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Author information."
        required: false
        schema:
          $ref: "#/definitions/AuthorQuery"
      - name: "author_id"
        in: "path"
        description: "ID of author."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/AuthorResult"
    delete:
      tags:
      - "author"
      summary: "Delete author by ID."
      description: "Delete author from database. Requires authentication token in\
        \ header with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876.\
        \ User must be in the 'admin' group."
      operationId: "deleteAuthor"
      produces:
      - "application/json"
      parameters:
      - name: "author_id"
        in: "path"
        description: "ID of author to retrieve."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  ResultWrapperAuthorResult:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int64"
      data:
        type: "array"
        items:
          $ref: "#/definitions/AuthorResult"
  AuthorResult:
    type: "object"
    properties:
      name:
        type: "string"
      birthDate:
        type: "string"
      olKey:
        type: "string"
      goodreadsUrl:
        type: "string"
      imageSmall:
        type: "string"
      imageMedium:
        type: "string"
      imageLarge:
        type: "string"
      subjects:
        type: "array"
        items:
          type: "string"
      id:
        type: "integer"
        format: "int32"
  AuthorQuery:
    type: "object"
    properties:
      name:
        type: "string"
      birthDate:
        type: "string"
      olKey:
        type: "string"
      goodreadsUrl:
        type: "string"
      imageSmall:
        type: "string"
      imageMedium:
        type: "string"
      imageLarge:
        type: "string"
      subjects:
        type: "array"
        items:
          type: "string"

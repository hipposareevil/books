user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    root /usr/share/nginx/html;

    upstream query {
      server query:8080;
    }

    upstream author {
      server author:8080;
    }

    upstream authorize {
      server authorize:8080;
    }

    upstream user {
      server user:8080;
    }

    upstream user_book {
      server user_book:8080;
    }

    upstream tag {
      server tag:8080;
    }

    upstream review {
      server review:8080;
    }

    upstream book {
      server book:8080;
    }

    upstream swagger {
      server swagger:8080;
    }


    upstream frontend {
      server frontend:80;
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server {
         listen 80;

         server_name localhost;
         error_page 502 /502.html;

         location / {
                proxy_pass http://frontend/;
         }

	 # Single root file for swagger. This will be grabbed by the
         # swagger-combine container to override certain swagger values.
         location /swagger.yaml { alias /usr/share/nginx/html/swagger.yaml; }
         location /502.html { alias /usr/share/nginx/html/502.html; }


	 location /query {
         	 proxy_pass http://query;
	 }

	 location /author {
         	 proxy_pass http://author;
	 }

	 location /user {
         	 proxy_pass http://user;
	 }

	 location /user_book {
         	 proxy_pass http://user_book;
	 }

	 location /tag {
         	 proxy_pass http://tag;
	 }

	 location /review {
         	 proxy_pass http://review;
	 }

	 location /authorize {
         	 proxy_pass http://authorize;
	 }

	 location /book {
         	 proxy_pass http://book;
	 }

         location /swagger {
                 proxy_pass http://swagger/;
         }


    }

    sendfile        on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}
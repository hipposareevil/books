swagger: "2.0"
info:
  description: "User REST web services."
  title: "User Web Service"
basePath: "/"
tags:
- name: "user"
schemes:
- "http"
paths:
  /user:
    get:
      tags:
      - "user"
      summary: "Get list of all users."
      description: "Requires authentication token in header with key AUTHORIZATION.\
        \ Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876. Caller must be 'admin'\
        \ user."
      operationId: "getUsers"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "Where to start the returned data segment from the full result."
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "size of the returned data segment."
        required: false
        type: "integer"
        format: "int32"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultWrapperVisableUser"
    post:
      tags:
      - "user"
      summary: "Create new user"
      description: "Create new user in database. Requires authentication token in\
        \ header with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876.\
        \ Caller must be 'admin' user. "
      operationId: "createUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User information."
        required: true
        schema:
          $ref: "#/definitions/PostUser"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "User created"
        409:
          description: "User already exists."
  /user/{user_id}:
    get:
      tags:
      - "user"
      summary: "Get user by ID."
      description: "Requires authentication token in header with key AUTHORIZATION.\
        \ Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876. Caller must be 'admin'\
        \ user."
      operationId: "getUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user to retrieve."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
    put:
      tags:
      - "user"
      summary: "Update user in the database"
      description: "Requires authentication token in header with key AUTHORIZATION.\
        \ Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876. Caller must be 'admin'\
        \ user. "
      operationId: "update"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user to update."
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "body"
        required: false
        schema:
          $ref: "#/definitions/User"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
    delete:
      tags:
      - "user"
      summary: "Delete user from database"
      description: "Requires authentication token in header with key AUTHORIZATION.\
        \ Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876. Caller must be 'admin'\
        \ user. "
      operationId: "delete"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "ID of user to delete."
        required: true
        type: "integer"
        format: "int32"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  PostUser:
    type: "object"
    properties:
      name:
        type: "string"
      userGroup:
        type: "string"
      data:
        type: "string"
      password:
        type: "string"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      data:
        type: "string"
      password:
        type: "string"
      userGroup:
        type: "string"
  VisableUser:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      userGroup:
        type: "string"
  ResultWrapperVisableUser:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int64"
      data:
        type: "array"
        items:
          $ref: "#/definitions/VisableUser"

swagger: "2.0"
info:
  description: "List, add and manage books via /book endpoint"
  title: "Book Web Service"
basePath: "/"
tags:
- name: "book"
schemes:
- "http"
paths:
  /book:
    get:
      tags:
      - "book"
      summary: "Get books via optional 'title' query param or optional 'ids' query\
        \ param. The three query params may be used at the same time."
      description: "Returns list of books. When no 'title', 'ids', 'author_name', or 'author_id'\
        \ are specified, all books in database are returned. Requires authentication\
        \ token in header with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "getBooks"
      produces:
      - "application/json"
      parameters:
      - name: "title"
        in: "query"
        description: "Title or partial title of book to retrieve."
        required: false
        type: "string"
      - name: "author_name"
        in: "query"
        description: "Name or partial name of author(s) of books to retrieve."
        required: false
        type: "string"
      - name: "book_id"
        in: "query"
        description: "List of book IDs to retrieve."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
      - name: "author_id"
        in: "query"
        description: "List of Author IDs to get books for."
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
        collectionFormat: "multi"
      - name: "offset"
        in: "query"
        description: "Where to start the returned data segment from the full result."
        required: false
        type: "integer"
        format: "int32"
      - name: "limit"
        in: "query"
        description: "size of the returned data segment."
        required: false
        type: "integer"
        format: "int32"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResultWrapperBookResult"
    post:
      tags:
      - "book"
      summary: "Create new book."
      description: "Creates new book. Requires authentication token in header with\
        \ key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "createBook"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book information."
        required: true
        schema:
          $ref: "#/definitions/BookQuery"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BookResult"
        409:
          description: "Book already exists."
  /book/{book_id}:
    get:
      tags:
      - "book"
      summary: "Get book by ID."
      description: "Get book information. Requires authentication token in header\
        \ with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "getBook"
      produces:
      - "application/json"
      parameters:
      - name: "book_id"
        in: "path"
        description: "ID of book to retrieve."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/BookResult"
    put:
      tags:
      - "book"
      summary: "Updates a book in the database."
      description: "Updats existing book. Requires authentication token in header\
        \ with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "updateBook"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book information."
        required: true
        schema:
          $ref: "#/definitions/BookQuery"
      - name: "book_id"
        in: "path"
        description: "ID of book."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
    delete:
      tags:
      - "book"
      summary: "Delete book by ID."
      description: "Delete book from database. Requires authentication token in header\
        \ with key AUTHORIZATION. Example: AUTHORIZATION: Bearer qwerty-1234-asdf-9876."
      operationId: "deleteBook"
      produces:
      - "application/json"
      parameters:
      - name: "book_id"
        in: "path"
        description: "ID of book to retrieve."
        required: true
        type: "string"
      - name: "Authorization"
        in: "header"
        description: "Bearer authorization"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
definitions:
  BookQuery:
    type: "object"
    properties:
      authorId:
        type: "integer"
        format: "int32"
      firstPublishedYear:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      isbns:
        type: "array"
        items:
          type: "string"
      subjects:
        type: "array"
        items:
          type: "string"
      description:
        type: "string"
      openlibraryWorkUrl:
        type: "string"
      goodreadsUrl:
        type: "string"
      imageSmall:
        type: "string"
      imageMedium:
        type: "string"
      imageLarge:
        type: "string"
  Book:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      authorId:
        type: "integer"
        format: "int32"
      year:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      description:
        type: "string"
      isbn:
        type: "string"
      subject:
        type: "string"
      olWorks:
        type: "string"
      goodreadsUrl:
        type: "string"
      imageSmall:
        type: "string"
      imageMedium:
        type: "string"
      imageLarge:
        type: "string"
  ResultWrapperBookResult:
    type: "object"
    properties:
      offset:
        type: "integer"
        format: "int32"
      limit:
        type: "integer"
        format: "int32"
      total:
        type: "integer"
        format: "int64"
      data:
        type: "array"
        items:
          $ref: "#/definitions/BookResult"
  BookResult:
    type: "object"
    properties:
      authorId:
        type: "integer"
        format: "int32"
      firstPublishedYear:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      isbns:
        type: "array"
        items:
          type: "string"
      subjects:
        type: "array"
        items:
          type: "string"
      description:
        type: "string"
      openlibraryWorkUrl:
        type: "string"
      goodreadsUrl:
        type: "string"
      imageSmall:
        type: "string"
      imageMedium:
        type: "string"
      imageLarge:
        type: "string"
      id:
        type: "integer"
        format: "int32"
      authorName:
        type: "string"
        
